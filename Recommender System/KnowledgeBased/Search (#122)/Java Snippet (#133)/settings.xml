<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="scriptImports" type="xstring" value="// Your custom imports:%%00010import java.util.ArrayList;%%00010import java.util.List;%%00010import java.util.Arrays;%%00010import org.knime.core.node.NodeLogger;"/>
<entry key="scriptFields" type="xstring" value="// Your custom variables:%%00010"/>
<entry key="scriptBody" type="xstring" value="// Enter your code here:%%00010NodeLogger nl = NodeLogger.getLogger(AbstractJSnippet.class);%%00010String str[] = c_ingredients_SplitResultList.split(&quot;,&quot;);%%00010List&lt;String&gt; ingr = new ArrayList&lt;String&gt;();%%00010ingr = Arrays.asList(str);%%00010%%00010String strR[] = c_ingredientsRequired_SplitResultList.split(&quot;,&quot;);%%00010List&lt;String&gt; ingrR = new ArrayList&lt;String&gt;();%%00010ingrR = Arrays.asList(strR);%%00010%%00010int count = 0;%%00010out_filter = &quot;0&quot;;%%00010%%00010for(int i=0; i&lt;ingr.size(); i++){%%00010%%00009for(int j=0; j&lt;ingrR.size(); j++){%%00010%%00009%%00009//nl.warn(&quot;'&quot; + ingr.get(i) + &quot;'&quot; + ingrR.get(j)+&quot;'&quot;);%%00010%%00009%%00009if(ingr.get(i).equals(ingrR.get(j))){%%00010%%00009%%00009%%00009//nl.warn(&quot;guess&quot;);%%00010%%00009%%00009%%00009count = count + 1;%%00010%%00009%%00009}%%00010%%00009}%%00010}%%00010out_filter = count + &quot;&quot;;%%00010%%00010%%00010%%00010%%00010"/>
<config key="jarFiles">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="outCols">
<entry key="array-size" type="xint" value="1"/>
<config key="0">
<entry key="Name" type="xstring" value="filter"/>
<entry key="JavaName" type="xstring" value="out_filter"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<config key="Type">
<entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
<entry key="is_null" type="xboolean" value="false"/>
</config>
<entry key="ConverterFactory" type="xstring" value="org.knime.core.data.def.StringCell$StringCellFactory.createCell(class java.lang.String)"/>
<entry key="replaceExisting" type="xboolean" value="false"/>
</config>
</config>
<config key="outVars">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="inCols">
<entry key="array-size" type="xint" value="1"/>
<config key="0">
<entry key="Name" type="xstring" value="ingredients"/>
<entry key="JavaName" type="xstring" value="c_ingredients_SplitResultList"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<config key="Type">
<entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
<entry key="is_null" type="xboolean" value="false"/>
</config>
<entry key="ConverterFactory" type="xstring" value="org.knime.core.data.convert.java.SimpleDataCellToJavaConverterFactory(DataValue,class java.lang.String,String (toString()))"/>
</config>
</config>
<config key="inVars">
<entry key="array-size" type="xint" value="1"/>
<config key="0">
<entry key="Name" type="xstring" value="multiple-selection"/>
<entry key="JavaName" type="xstring" value="c_ingredientsRequired_SplitResultList"/>
<entry key="JavaType" type="xstring" value="java.lang.String"/>
<entry key="Type" type="xstring" value="STRING"/>
</config>
</config>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="templateUUID" type="xstring" isnull="true" value=""/>
<entry key="runOnExecute" type="xboolean" value="false"/>
<config key="bundles">
<entry key="array-size" type="xint" value="0"/>
</config>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.base.node.jsnippet.JavaSnippetNodeFactory"/>
<entry key="node-name" type="xstring" value="Java Snippet"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Java Snippet Nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.jsnippets"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.3.0.v202011191508"/>
<entry key="node-feature-name" type="xstring" value="KNIME Javasnippet"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.javasnippet.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.3.0.v202011191508"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Java Snippet"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
